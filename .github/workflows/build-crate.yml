name: Rust crate

on:
  push:
    branches:
      - main
    tags:
      - "**"
  pull_request:
    branches:
      - "**"

concurrency:
  group: ${{ github.event_name == 'pull_request' && format('{0}-{1}', github.workflow_ref, github.event.pull_request.number) || github.run_id }}
  cancel-in-progress: true

jobs:
  build_crate:
    name: Build crate
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Rust
        uses: dtolnay/rust-toolchain@1.85.0
        with:
          components: rustfmt, clippy

      - name: Fmt
        run: cargo fmt --all -- --files-with-diff --check

      - name: Clippy
        run: cargo clippy --workspace --all-features --all-targets -- -D warnings

      - name: Install cargo-machete
        run: cargo install cargo-machete@0.8.0

      - name: Unused dependencies
        run: cargo machete

      - name: Tests (debug)
        run: cargo test --workspace --all-features

      - name: Tests (release)
        run: cargo test --workspace --all-features --release --features=clvmr/allocator-debug

      - name: Build (release)
        run: cargo build --workspace --all-features --release

      - name: Install cargo-workspaces
        run: cargo install cargo-workspaces --locked

      - name: Publish (dry run)
        run: cargo ws publish --publish-as-is --dry-run

      - name: Upload crate artifacts
        uses: actions/upload-artifact@v4
        with:
          name: crate
          path: ./target/package/*-*.crate

      - name: Publish (crates.io)
        if: startsWith(github.event.ref, 'refs/tags')
        env:
          CARGO_REGISTRY_TOKEN: ${{ secrets.cargo_registry_token }}
        run: cargo ws publish --publish-as-is

  generate_fuzz_list:
    name: Generate fuzz crate list
    runs-on: ubuntu-latest
    outputs:
      fuzz_crates: ${{ steps.get_fuzz_crates.outputs.fuzz_crates }}
    steps:
      - uses: actions/checkout@v4

      - name: Set up Rust
        uses: dtolnay/rust-toolchain@1.85.0

      - name: Get fuzz crates
        id: get_fuzz_crates
        run: |
          fuzz_crates=$(cargo metadata --format-version 1 | jq -c '[.packages[] | select(.metadata."cargo-fuzz" == true) | select(.source == null) | .name | sub("-fuzz$"; "")]')
          echo "fuzz_crates=$fuzz_crates" >> "$GITHUB_OUTPUT"

  fuzz_tests:
    name: Fuzz (${{ matrix.package }})
    runs-on: ubuntu-latest
    needs: generate_fuzz_list
    strategy:
      fail-fast: false
      matrix:
        package: ${{ fromJson(needs.generate_fuzz_list.outputs.fuzz_crates) }}
        toolchain:
          - nightly-2025-01-12
        max_total_time:
          - 20
    env:
      CARGO_PROFILE_RELEASE_LTO: false
    steps:
      - uses: actions/checkout@v4

      - uses: dtolnay/rust-toolchain@nightly
        with:
          toolchain: ${{ matrix.toolchain }}

      - name: Install cargo-fuzz
        run: cargo +"${{ matrix.toolchain }}" install cargo-fuzz

      - name: Fuzz
        run: |
          cd crates/"${{ matrix.package }}"
          cargo fuzz list | xargs -I "%" sh -c "cargo +'${{ matrix.toolchain }}' fuzz run % -- -max_total_time=${{ matrix.max_total_time}} || exit 255"
