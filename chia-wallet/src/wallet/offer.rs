use std::{
    array::TryFromSliceError,
    io::{self, ErrorKind, Read},
};

use chia_primitives::puzzles::{
    CAT_PUZZLE, CAT_PUZZLE_V1, NFT_METADATA_UPDATER_PUZZLE, NFT_OWNERSHIP_LAYER_PUZZLE,
    NFT_ROYALTY_TRANSFER_PUZZLE, NFT_STATE_LAYER_PUZZLE, SETTLEMENT_PAYMENTS_PUZZLE,
    SETTLEMENT_PAYMENTS_PUZZLE_V1, SINGLETON_PUZZLE, STANDARD_PUZZLE,
};
use flate2::{
    read::{ZlibDecoder, ZlibEncoder},
    Compress, Compression, Decompress, FlushDecompress,
};
use thiserror::Error;

macro_rules! define_compression_versions {
    ( $( $version:expr => $( $bytes:expr ),+ ; )+ ) => {
        fn zdict_for_version(version: u16) -> Vec<u8> {
            let mut bytes = Vec::new();
            $( if version >= $version {
                $( bytes.extend_from_slice(&$bytes); )+
            } )+
            bytes
        }

        pub fn required_compression_version(puzzles: Vec<Vec<u8>>) -> u16 {
            let mut required_version = MIN_VERSION;
            $( {
                $( if required_version < $version && puzzles.iter().any(|puzzle| puzzle == &$bytes) {
                    required_version = $version;
                } )+
            } )+
            required_version
        }
    };
}

const MIN_VERSION: u16 = 6;
const MAX_VERSION: u16 = 6;

define_compression_versions!(
    1 => STANDARD_PUZZLE, CAT_PUZZLE_V1;
    2 => SETTLEMENT_PAYMENTS_PUZZLE_V1;
    3 => SINGLETON_PUZZLE, NFT_STATE_LAYER_PUZZLE,
         NFT_OWNERSHIP_LAYER_PUZZLE, NFT_METADATA_UPDATER_PUZZLE,
         NFT_ROYALTY_TRANSFER_PUZZLE;
    4 => CAT_PUZZLE;
    5 => SETTLEMENT_PAYMENTS_PUZZLE;
);

fn decompress(input: &[u8], zdict: &[u8]) -> io::Result<Vec<u8>> {
    let mut decompress = Decompress::new(true);
    if decompress
        .decompress(input, &mut [], FlushDecompress::Finish)
        .is_ok()
    {
        return Err(io::Error::new(
            ErrorKind::Unsupported,
            "cannot decompress uncompressed input",
        ));
    }
    decompress.set_dictionary(zdict)?;
    let i = decompress.total_in();
    let mut decoder = ZlibDecoder::new_with_decompress(&input[i as usize..], decompress);
    let mut output = Vec::new();
    decoder.read_to_end(&mut output)?;
    Ok(output)
}

fn compress(input: &[u8], zdict: &[u8]) -> io::Result<Vec<u8>> {
    let mut compress = Compress::new(Compression::new(6), true);
    compress.set_dictionary(zdict)?;
    let mut encoder = ZlibEncoder::new_with_compress(input, compress);
    let mut output = Vec::new();
    encoder.read_to_end(&mut output)?;
    Ok(output)
}

#[derive(Debug, Error)]
pub enum DecompressionError {
    #[error("io error: {0}")]
    Io(#[from] io::Error),

    #[error("{0}")]
    TryFromSlice(#[from] TryFromSliceError),

    #[error("missing version prefix")]
    MissingVersionPrefix,

    #[error("unsupported version")]
    UnsupportedVersion,
}

pub fn decompress_object_with_puzzles(bytes: &[u8]) -> Result<Vec<u8>, DecompressionError> {
    let version_bytes: [u8; 2] = bytes
        .get(0..2)
        .ok_or(DecompressionError::MissingVersionPrefix)?
        .try_into()?;

    let version = u16::from_be_bytes(version_bytes);

    if version > MAX_VERSION {
        return Err(DecompressionError::UnsupportedVersion);
    }

    let zdict = zdict_for_version(version);

    Ok(decompress(&bytes[2..], &zdict)?)
}

pub fn compress_object_with_puzzles(bytes: &[u8], version: u16) -> io::Result<Vec<u8>> {
    let mut output = version.to_be_bytes().to_vec();
    let zdict = zdict_for_version(version);
    output.extend(compress(bytes, &zdict)?);
    Ok(output)
}

#[cfg(test)]
mod tests {
    use std::io::Cursor;

    use chia_protocol::{SpendBundle, Streamable};
    use hex::ToHex;
    use hex_literal::hex;

    use super::*;

    #[test]
    fn test_compression() {
        for version in MIN_VERSION..=MAX_VERSION {
            let output = compress_object_with_puzzles(&DECOMPRESSED_OFFER_HEX, version).unwrap();

            assert_eq!(
                output.encode_hex::<String>(),
                COMPRESSED_OFFER_HEX.encode_hex::<String>()
            );
        }
    }

    #[test]
    fn test_decompression() {
        for version in MIN_VERSION..=MAX_VERSION {
            let output = decompress_object_with_puzzles(&COMPRESSED_OFFER_HEX).unwrap();

            assert_eq!(
                output.encode_hex::<String>(),
                DECOMPRESSED_OFFER_HEX.encode_hex::<String>()
            );
        }
    }

    #[test]
    fn parse_spend_bundle() {
        SpendBundle::parse(&mut Cursor::new(&DECOMPRESSED_OFFER_HEX)).unwrap();
    }

    const COMPRESSED_OFFER_HEX: [u8; 1225] = hex!(
        "
        000678bb1ce2864b63606060622000f234ef6ae4725635979d975e6263fb68c9b687879b720f54fbcf0ace3de319c33d09a60ede4e1dadfd476bffd1da7fb4f61fadfd476bffff0355fb830bf705e6fb3e27bc6b6d34de3637326a42ee9158c6f501e673d706c6ed0cecda5d23ab550555c6f445a3f9b7b1852187eac9c0f7675608bcd9265e74f3e9ad2c5d5faed4893b3aeba055c5688b8288ee3f234466c1f5c59bc3dfd96dbcdc5aa327e6fd6ee9e99e8f172eb31fde71c2cdb66561eca3c7af804aa6d4443f0cd2fa1f6eb6577ba710cb9fc5ad697cf64be7596f5ffcae607e50c3fcc2ffade21e652f18885009b273febfbd99c12d7de60d5c57358d8e1dbbc795a9b0a6d4e9ea910ef9d007a50deed925613fb414ea5ca30f2eaff9a0f4cff964c7a693676d2fdd7448ba1514b7f1505130b419038f6678188fae18185d31008ef9d1150330c121b3620092b617d4af320ade7ff7e2837ba739d936dd4972df7de47c427f8449acb8d5ede4175b6ae6ff5ff0728acd3aa766d7c7f97cbeba7667cf17fb3d3bd6da671653ffe68cd6bc97befbad17bcff50aae419907020ed5bbed19a43cbebacec8aab4e75af5b727199df92b3076d57a2d611ff47d729d02e018cae5318beeb14c0097ec102dff9e165fe214bec1c0cf6fdf66d60ca6b67955cb52cd964dd0f03ff58e6c98760f9a2f4ff81c88c929282622b7dfda4c4b4eca2d4cca48ca28ad2a2ca34a3f4f2caf4e28ad4ec9c8cc4f492dc948a92e2fce4c2b2acacaa94c24a3393a2ac9432e3a294bc94c2bc7413bdcc82b462bdbcb492e292fca2c4f454bd9cccbc6cd0b044c602f5de9732e26edb78b5277a5bf09af17d9edccab5d452c6f09dabf2ba47667dbce6ffff37e596fe5f087344416271496a52669e5e727eae7e5162b97e88a98f7b8153aa71034861c682c008a6f8681599bc832d9d45963116a61e53e2d30e2672ff3a706f25fbb6b8de04a0aae23cd0fc567109ac665ef0afcbdb4f7dd1a359bef6c7cfcd0daaba7deaccae6d6b174fb0396fbd7279e6a5ebdd584a9ed1651e28096c7499c7e8320f02eef93fbacc83d878a2cf320f48d97774f5abcaf5ab18a443d4ef2f3871dee954bec5d716e98a9f9b0f0515db6dbaa7ae0655f6b0ab32d0e47262d7295619afd882af4b7c76f1e9aee7c830e0e672d73b14f53d0f4b1139ba9c627439c550584ef19fce3d98058b9d16dabff3fbb2ebedec9fe9db2f4f375cbab5f77ef5c4d939f939dfee2e5e3af10c4419176ca0075bc61ab6db1bc1066fe87931a1f4d68ffcc0c247870433ef3c8b78eae9b54e6642cd87e78eb9c71faadd158fdb9f67bae7e5b740d35b9d53ea1e8a9e428c8ba150ff09c7d9ff0561ed81a593f6ef60faee68c15eebbe42397dcad515b981b24d816a1e7a96d3e7f2805d061abc013b18d87803316003670b08cddd413202b01bb4e0fcfe7b6f637c16ddb3e5feaab0f3b4f7f6122bd3d9979e2decb838e7f9fd3f8a979f830c27a8086496fdff0552f1cc53263ead78fe2ffafe9edf3b5e6e49a98cf874ffa813df0ae3b5f6bf2a5bf361f9b569fdd32dedbf5a8e9cbbe35da7cd7dfda2a038fff584f2522b734be70949afef545888cc3df25eee72421443edffd2dfd3bef2a9b15e5e3ed3e34ca2e57efe075e923e3badde58d8258b35873ebebb69fd156571cbe7f20fa6a4fbea7c0f5772da3e554d190018bbefd7
        "
    );

    const DECOMPRESSED_OFFER_HEX: [u8; 7390] = hex!(
        "
        
        "
    );
}
